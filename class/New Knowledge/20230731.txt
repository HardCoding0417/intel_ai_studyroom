read about multiprocessing




<data share> (multiprocessing.py)

1) Manager(): massive data								list(), dict(), set()?

복잡한 데이터구조(리스트, 딕셔너리, 세트? 등)를 프로세스 간에 공유하도록 지원함.
	-> 대용량 데이터 공유에 유용(Queue보다 효율적). Proxy 객체를 통해 접근하고 수정함.
	데이터 동기화는 Lock() 사용 -> 성능이 조금 저하될 수 있다.
	
2) Value(): simple data									Value('i').value

간단한 데이터 타입(i, f, ...)을 빠르게 공유하도록 지원.
단일 값만 공유가능.
	데이터 동기화 Lock() 사용

3) Queue(): 여러 프로세스 간 간단한 데이터, 비동기적 처리			put(), get()

여러 프로세스 간에 데이터를 안전하게 교환. 데이터를 순차적으로 꺼냄.
한 프로세스에서 데이터를 넣고, 다른 프로세스에서 데이터를 뺄 수 있음.
	-> 간단한 데이터를 주고 받는 비동기적인 작업을 수행할 때 유용.
		e.g.] 웹 서버에서 비동기적인 여러 클라이언트의 요청을 동시에 처리
	데이터 동기화 Lock() 사용

[
	비동기적 작업: 어떤 작업의 결과를 기다리지 않고 다음 작업을 실행함.
	<-> 동기적 작업: 한 작업이 끝나기를 기다리고 그 결과를 받아야만 다음 작업을 수행할 수 있음.
]

4) Pipe(): 문자열같은 직렬화 데이터							send(), recv()

메모리 기반의 파이프로 데이터를 주고 받음. 시스템 메모리의 한계에 따라 공유 데이터량이 제한됨.
	- 공유 가능 데이터: 리스트, 문자열, 딕셔너리, CustomClass의 객체
	- Pipe() (full duplex) or Pipe(False) (half duplex)